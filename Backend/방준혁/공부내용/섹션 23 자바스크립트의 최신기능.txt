섹션 23 자바스크립트의 최신기능

Math.max(  )****************************************************
       .min(  )****************************************************

괄호 안의 수 중에서 최대와 최소를 출력

괄호 안에 배열을 넣을때는 "...배열이름" 과 같은 형식으로 쓴다
...: 배열을 펼치고 하나씩넣는다는 의미, 즉 하나하나 로 분리
        Hello-> H e l l o
     인수1, 2, 3-> 인수1, 인수2, 인수3
이것을 spread 라고 한다.

spread(...)****************************************************

... 으로 배열을 복사하는 방법
array = [ ~ ~ ~ ]

newarray = [...array]

이런식으로 배열 여러개도 복사가능

배열을 복사하는것이므로 이후에 기존배열에 변화가 있어도 복사된 배열에 영향없음

배열의 값들을 펼치는것이므로 하나하나 다시 새로운 배열에 저장한다고 생각하자

객체를 복사할수도 있고 동시에 추가할수도있다
ex)

const name = { first: 'Bang', last: 'Hunhyuk' }

const nameOder = { ...name, order: 22 }

물론 새로운 객체를 만들떄 기존의 객체가 여러개 들어갈 수 있다




rest**********************************************************

rest를 직접적으로 쓰는것은 아니다
아래와같은 함수가 있다고 하자

function medal(gold, silver, ...else) {
    console.log('Gold Medal Goes TO : ${gold}')
       console.log('Silver Medal Goes TO : ${silver}')
       console.log('And other : ${else}')
 }

medal('Bang', 'Kim', 'Lee', 'Jang', 'Oh', 'Jo') //함수 호출

이때 파라메터로 전해지는것은 
gold에는 Bang
silver에는 Kim
else에는 방과 김을 제외한 나머지이다. 

==> 호출 결과는???
Gold Medal Goes TO : Bang
Silver Medal Goes TO : Kim
And other : Jang, Oh, Jo






배열 분해 ********************************************************

배열에 들어있는 값을 빼내서 새로운 변수에 저장하는 것

const score = [123, 456, 789, 101112, 121314, 151617]

기존에는

const new1 = score[0]
const new2 = score[1]

이렇게 했지만 이것보다 더 간단한 방법이 있다

const [new1, new2] = score

이렇게하면 위에서 기존해 했던 방식에 대한 결과와 같다. new 1에는 123, new 2에는 456

const [new1, new2, ...else] = score

이렇게 하면 else는 123, 456 을 제외한 나머지가 된다





객체 분해 *********************************************************


const user = {
  email : qkd3001@naver.com
 name : Bang
 order : 22
 .
 .
 .
}

user의 정보가 담긴 객체가 있다고 하자

const {email} = user;

email //이렇게 하면 이메일을 출력하는 변수명이 email
==> qkd.... 가 출력



const {email: newEmail} = user;
이렇게 하면 이메일을 출력하는 변수를 newEmail로 바꿀 수 있다.




매개변수의 분해**************************************************

const user = {
  email : qkd3001@naver.com
 name : Bang
 order : 22
 .
 .
 .
}

user.map( ( {email, name, order} ) => {
    return '${email}, ${name}, ${order}
})

==>결과는??
qkd3001..... , Bang, 22